

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sun Oct 16 23:57:45 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  008C                     	;# 
    50  008E                     	;# 
    51  008F                     	;# 
    52  0090                     	;# 
    53  0092                     	;# 
    54  0095                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0096                     	;# 
    58  0099                     	;# 
    59  009A                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0092                     	;# 
    97  0095                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  008C                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0092                     	;# 
   140  0095                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0096                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  008C                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0092                     	;# 
   183  0095                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0096                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  008C                     	;# 
   222  008E                     	;# 
   223  008F                     	;# 
   224  0090                     	;# 
   225  0092                     	;# 
   226  0095                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0096                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  001F                     _ADCON0bits	set	31
   239  001E                     _ADRESH	set	30
   240  0085                     _TRISIObits	set	133
   241                           
   242                           ; #config settings
   243  0000                     
   244                           	psect	cinit
   245  000B                     start_initialization:	
   246  000B                     __initialization:	
   247  000B                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  000B                     __end_of__initialization:	
   251  000B  0183               	clrf	3
   252  000C  2A02               	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:	
   256  0070                     ?_ConfigureOscillator:	
   257  0070                     ?_InitApp:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_isr:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_isr:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271  0070                     	ds	2
   272  0072                     ??_ConfigureOscillator:	
   273  0072                     ??_InitApp:	
   274                           ; 1 bytes @ 0x2
   275                           
   276  0072                     ?_setResultLeds:	
   277                           ; 1 bytes @ 0x2
   278                           
   279  0072                     ?___wmul:	
   280                           ; 1 bytes @ 0x2
   281                           
   282  0072                     ?___ftpack:	
   283                           ; 2 bytes @ 0x2
   284                           
   285  0072                     setResultLeds@leds:	
   286                           ; 3 bytes @ 0x2
   287                           
   288  0072                     ___wmul@multiplier:	
   289                           ; 2 bytes @ 0x2
   290                           
   291  0072                     ___ftpack@arg:	
   292                           ; 2 bytes @ 0x2
   293                           
   294                           
   295                           ; 3 bytes @ 0x2
   296  0072                     	ds	2
   297  0074                     ??_setResultLeds:	
   298  0074                     ___wmul@multiplicand:	
   299                           ; 1 bytes @ 0x4
   300                           
   301                           
   302                           ; 2 bytes @ 0x4
   303  0074                     	ds	1
   304  0075                     ___ftpack@exp:	
   305                           
   306                           ; 1 bytes @ 0x5
   307  0075                     	ds	1
   308  0076                     ??___wmul:	
   309  0076                     ___ftpack@sign:	
   310                           ; 1 bytes @ 0x6
   311                           
   312  0076                     ___wmul@product:	
   313                           ; 1 bytes @ 0x6
   314                           
   315                           
   316                           ; 2 bytes @ 0x6
   317  0076                     	ds	1
   318  0077                     ??___ftpack:	
   319                           
   320                           ; 1 bytes @ 0x7
   321  0077                     	ds	1
   322  0078                     ?___awdiv:	
   323  0078                     ___awdiv@divisor:	
   324                           ; 2 bytes @ 0x8
   325                           
   326                           
   327                           ; 2 bytes @ 0x8
   328  0078                     	ds	2
   329  007A                     ??_getResultLed:	
   330  007A                     ??___ftge:	
   331                           ; 1 bytes @ 0xA
   332                           
   333  007A                     ___awdiv@dividend:	
   334                           ; 1 bytes @ 0xA
   335                           
   336                           
   337                           ; 2 bytes @ 0xA
   338  007A                     	ds	2
   339  007C                     ??_getSensorMeasurement:	
   340  007C                     ??___awdiv:	
   341                           ; 1 bytes @ 0xC
   342                           
   343  007C                     ??___awtoft:	
   344                           ; 1 bytes @ 0xC
   345                           
   346                           
   347                           	psect	cstackBANK0
   348  0020                     __pcstackBANK0:	
   349                           ; 1 bytes @ 0xC
   350                           
   351  0020                     ?___ftdiv:	
   352  0020                     ___awdiv@counter:	
   353                           ; 3 bytes @ 0x0
   354                           
   355  0020                     ___ftdiv@f2:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 3 bytes @ 0x0
   360  0020                     	ds	1
   361  0021                     ___awdiv@sign:	
   362                           
   363                           ; 1 bytes @ 0x1
   364  0021                     	ds	1
   365  0022                     ___awdiv@quotient:	
   366                           
   367                           ; 2 bytes @ 0x2
   368  0022                     	ds	1
   369  0023                     ___ftdiv@f1:	
   370                           
   371                           ; 3 bytes @ 0x3
   372  0023                     	ds	1
   373  0024                     ?___awtoft:	
   374  0024                     ___awtoft@c:	
   375                           ; 3 bytes @ 0x4
   376                           
   377                           
   378                           ; 2 bytes @ 0x4
   379  0024                     	ds	2
   380  0026                     ??___ftdiv:	
   381                           
   382                           ; 1 bytes @ 0x6
   383  0026                     	ds	1
   384  0027                     ___awtoft@sign:	
   385                           
   386                           ; 1 bytes @ 0x7
   387  0027                     	ds	1
   388  0028                     ?_getSensorMeasurement:	
   389                           
   390                           ; 3 bytes @ 0x8
   391  0028                     	ds	1
   392  0029                     ___ftdiv@cntr:	
   393                           
   394                           ; 1 bytes @ 0x9
   395  0029                     	ds	1
   396  002A                     ___ftdiv@f3:	
   397                           
   398                           ; 3 bytes @ 0xA
   399  002A                     	ds	1
   400  002B                     getSensorMeasurement@val:	
   401                           
   402                           ; 1 bytes @ 0xB
   403  002B                     	ds	2
   404  002D                     ___ftdiv@exp:	
   405                           
   406                           ; 1 bytes @ 0xD
   407  002D                     	ds	1
   408  002E                     ___ftdiv@sign:	
   409                           
   410                           ; 1 bytes @ 0xE
   411  002E                     	ds	1
   412  002F                     ?___ftge:	
   413  002F                     ___ftge@ff1:	
   414                           ; 1 bit 
   415                           
   416                           
   417                           ; 3 bytes @ 0xF
   418  002F                     	ds	3
   419  0032                     ___ftge@ff2:	
   420                           
   421                           ; 3 bytes @ 0x12
   422  0032                     	ds	3
   423  0035                     ?_getResultLed:	
   424  0035                     getResultLed@voltage:	
   425                           ; 2 bytes @ 0x15
   426                           
   427                           
   428                           ; 3 bytes @ 0x15
   429  0035                     	ds	3
   430  0038                     ??_main:	
   431                           
   432                           ; 1 bytes @ 0x18
   433  0038                     	ds	3
   434  003B                     main@sensorMeasurement:	
   435                           
   436                           ; 3 bytes @ 0x1B
   437  003B                     	ds	3
   438  003E                     main@leds:	
   439                           
   440                           ; 2 bytes @ 0x1E
   441  003E                     	ds	2
   442                           
   443                           	psect	maintext
   444  0202                     __pmaintext:	
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 27 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  sensorMeasur    3   27[BANK0 ] 
   455 ;;  leds            2   30[BANK0 ] unsigned int 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 100/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1
   465 ;;      Params:         0       0       0
   466 ;;      Locals:         0       5       0
   467 ;;      Temps:          0       3       0
   468 ;;      Totals:         0       8       0
   469 ;;Total ram usage:        8 bytes
   470 ;; Hardware stack levels required when called:    4
   471 ;; This function calls:
   472 ;;		_ConfigureOscillator
   473 ;;		_InitApp
   474 ;;		_getResultLed
   475 ;;		_getSensorMeasurement
   476 ;;		_setResultLeds
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _main
   484  0202                     _main:	
   485                           
   486                           ;main.c: 31: ConfigureOscillator();
   487                           
   488                           ;incstack = 0
   489                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   490  0202  2291               	fcall	_ConfigureOscillator
   491                           
   492                           ;main.c: 35: InitApp();
   493  0203  227E               	fcall	_InitApp
   494  0204                     l22:	
   495                           ;main.c: 40: while (1) {
   496                           
   497                           
   498                           ;main.c: 44: _delay((unsigned long)((1000)*(32000000/4000.0)));
   499  0204  3029               	movlw	41
   500  0205  1283               	bcf	3,5	;RP0=0, select bank0
   501  0206  00BA               	movwf	??_main+2
   502  0207  3096               	movlw	150
   503  0208  00B9               	movwf	??_main+1
   504  0209  30A6               	movlw	166
   505  020A  00B8               	movwf	??_main
   506  020B                     u757:	
   507  020B  0BB8               	decfsz	??_main,f
   508  020C  2A0B               	goto	u757
   509  020D  0BB9               	decfsz	??_main+1,f
   510  020E  2A0B               	goto	u757
   511  020F  0BBA               	decfsz	??_main+2,f
   512  0210  2A0B               	goto	u757
   513                           
   514                           ;main.c: 48: double sensorMeasurement = getSensorMeasurement();
   515  0211  2229               	fcall	_getSensorMeasurement
   516  0212  0828               	movf	?_getSensorMeasurement,w
   517  0213  00BB               	movwf	main@sensorMeasurement
   518  0214  0829               	movf	?_getSensorMeasurement+1,w
   519  0215  00BC               	movwf	main@sensorMeasurement+1
   520  0216  082A               	movf	?_getSensorMeasurement+2,w
   521  0217  00BD               	movwf	main@sensorMeasurement+2
   522                           
   523                           ;main.c: 52: unsigned int leds = getResultLed(sensorMeasurement);
   524  0218  083B               	movf	main@sensorMeasurement,w
   525  0219  00B5               	movwf	getResultLed@voltage
   526  021A  083C               	movf	main@sensorMeasurement+1,w
   527  021B  00B6               	movwf	getResultLed@voltage+1
   528  021C  083D               	movf	main@sensorMeasurement+2,w
   529  021D  00B7               	movwf	getResultLed@voltage+2
   530  021E  200D               	fcall	_getResultLed
   531  021F  0836               	movf	?_getResultLed+1,w
   532  0220  00BF               	movwf	main@leds+1
   533  0221  0835               	movf	?_getResultLed,w
   534  0222  00BE               	movwf	main@leds
   535                           
   536                           ;main.c: 56: setResultLeds(leds);
   537  0223  083F               	movf	main@leds+1,w
   538  0224  00F3               	movwf	setResultLeds@leds+1
   539  0225  083E               	movf	main@leds,w
   540  0226  00F2               	movwf	setResultLeds@leds
   541  0227  2290               	fcall	_setResultLeds
   542  0228  2A04               	goto	l22
   543  0229                     __end_of_main:	
   544                           
   545                           	psect	text1
   546  0290                     __ptext1:	
   547 ;; *************** function _setResultLeds *****************
   548 ;; Defined at:
   549 ;;		line 111 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  leds            2    2[COMMON] unsigned int 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		None
   558 ;; Tracked objects:
   559 ;;		On entry : 100/0
   560 ;;		On exit  : 100/0
   561 ;;		Unchanged: 100/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1
   563 ;;      Params:         2       0       0
   564 ;;      Locals:         0       0       0
   565 ;;      Temps:          0       0       0
   566 ;;      Totals:         2       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _setResultLeds
   579  0290                     _setResultLeds:	
   580                           
   581                           ;incstack = 0
   582                           ; Regs used in _setResultLeds: []
   583  0290  0008               	return
   584  0291                     __end_of_setResultLeds:	
   585                           
   586                           	psect	text2
   587  0229                     __ptext2:	
   588 ;; *************** function _getSensorMeasurement *****************
   589 ;; Defined at:
   590 ;;		line 64 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  val             1   11[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  3    8[BANK0 ] unsigned char 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/100
   601 ;;		On exit  : 100/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1
   604 ;;      Params:         0       3       0
   605 ;;      Locals:         0       1       0
   606 ;;      Temps:          0       0       0
   607 ;;      Totals:         0       4       0
   608 ;;Total ram usage:        4 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		___awdiv
   613 ;;		___awtoft
   614 ;;		___wmul
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _getSensorMeasurement
   622  0229                     _getSensorMeasurement:	
   623                           
   624                           ;main.c: 68: ADCON0bits.GO = 1;
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _getSensorMeasurement: [wreg+status,2+status,0+pclath+cstack]
   628  0229  1283               	bcf	3,5	;RP0=0, select bank0
   629  022A  149F               	bsf	31,1	;volatile
   630  022B                     l28:	
   631                           ;main.c: 72: while (ADCON0bits.GO);
   632                           
   633  022B  189F               	btfsc	31,1	;volatile
   634  022C  2A2B               	goto	l28
   635                           
   636                           ;main.c: 73: unsigned char val = ADRESH;
   637  022D  081E               	movf	30,w	;volatile
   638  022E  00AB               	movwf	getSensorMeasurement@val
   639                           
   640                           ;main.c: 74: return (5 * val) / 10;
   641  022F  300A               	movlw	10
   642  0230  00F8               	movwf	___awdiv@divisor
   643  0231  01F9               	clrf	___awdiv@divisor+1
   644  0232  082B               	movf	getSensorMeasurement@val,w
   645  0233  00F2               	movwf	___wmul@multiplier
   646  0234  3005               	movlw	5
   647  0235  01F3               	clrf	___wmul@multiplier+1
   648  0236  00F4               	movwf	___wmul@multiplicand
   649  0237  01F5               	clrf	___wmul@multiplicand+1
   650  0238  2265               	fcall	___wmul
   651  0239  0873               	movf	?___wmul+1,w
   652  023A  00FB               	movwf	___awdiv@dividend+1
   653  023B  0872               	movf	?___wmul,w
   654  023C  00FA               	movwf	___awdiv@dividend
   655  023D  214F               	fcall	___awdiv
   656  023E  0879               	movf	?___awdiv+1,w
   657  023F  00A5               	movwf	___awtoft@c+1
   658  0240  0878               	movf	?___awdiv,w
   659  0241  00A4               	movwf	___awtoft@c
   660  0242  224A               	fcall	___awtoft
   661  0243  0824               	movf	?___awtoft,w
   662  0244  00A8               	movwf	?_getSensorMeasurement
   663  0245  0825               	movf	?___awtoft+1,w
   664  0246  00A9               	movwf	?_getSensorMeasurement+1
   665  0247  0826               	movf	?___awtoft+2,w
   666  0248  00AA               	movwf	?_getSensorMeasurement+2
   667  0249  0008               	return
   668  024A                     __end_of_getSensorMeasurement:	
   669                           
   670                           	psect	text3
   671  0265                     __ptext3:	
   672 ;; *************** function ___wmul *****************
   673 ;; Defined at:
   674 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  multiplier      2    2[COMMON] unsigned int 
   677 ;;  multiplicand    2    4[COMMON] unsigned int 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  product         2    6[COMMON] unsigned int 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  2    2[COMMON] unsigned int 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0
   684 ;; Tracked objects:
   685 ;;		On entry : 100/0
   686 ;;		On exit  : 100/0
   687 ;;		Unchanged: 100/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1
   689 ;;      Params:         4       0       0
   690 ;;      Locals:         2       0       0
   691 ;;      Temps:          0       0       0
   692 ;;      Totals:         6       0       0
   693 ;;Total ram usage:        6 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_getSensorMeasurement
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function ___wmul
   705  0265                     ___wmul:	
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   709  0265  01F6               	clrf	___wmul@product
   710  0266  01F7               	clrf	___wmul@product+1
   711  0267                     l854:	
   712  0267  1C72               	btfss	___wmul@multiplier,0
   713  0268  2A6F               	goto	l858
   714  0269  0874               	movf	___wmul@multiplicand,w
   715  026A  07F6               	addwf	___wmul@product,f
   716  026B  1803               	skipnc
   717  026C  0AF7               	incf	___wmul@product+1,f
   718  026D  0875               	movf	___wmul@multiplicand+1,w
   719  026E  07F7               	addwf	___wmul@product+1,f
   720  026F                     l858:	
   721  026F  1003               	clrc
   722  0270  0DF4               	rlf	___wmul@multiplicand,f
   723  0271  0DF5               	rlf	___wmul@multiplicand+1,f
   724  0272  1003               	clrc
   725  0273  0CF3               	rrf	___wmul@multiplier+1,f
   726  0274  0CF2               	rrf	___wmul@multiplier,f
   727  0275  0872               	movf	___wmul@multiplier,w
   728  0276  0473               	iorwf	___wmul@multiplier+1,w
   729  0277  1D03               	btfss	3,2
   730  0278  2A67               	goto	l854
   731  0279  0877               	movf	___wmul@product+1,w
   732  027A  00F3               	movwf	?___wmul+1
   733  027B  0876               	movf	___wmul@product,w
   734  027C  00F2               	movwf	?___wmul
   735  027D  0008               	return
   736  027E                     __end_of___wmul:	
   737                           
   738                           	psect	text4
   739  024A                     __ptext4:	
   740 ;; *************** function ___awtoft *****************
   741 ;; Defined at:
   742 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  c               2    4[BANK0 ] int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  sign            1    7[BANK0 ] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  3    4[BANK0 ] float 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 100/0
   753 ;;		On exit  : 100/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1
   756 ;;      Params:         0       3       0
   757 ;;      Locals:         0       1       0
   758 ;;      Temps:          0       0       0
   759 ;;      Totals:         0       4       0
   760 ;;Total ram usage:        4 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    2
   763 ;; This function calls:
   764 ;;		___ftpack
   765 ;; This function is called by:
   766 ;;		_getSensorMeasurement
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function ___awtoft
   772  024A                     ___awtoft:	
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
   776  024A  01A7               	clrf	___awtoft@sign
   777  024B  1FA5               	btfss	___awtoft@c+1,7
   778  024C  2A54               	goto	l920
   779  024D  09A4               	comf	___awtoft@c,f
   780  024E  09A5               	comf	___awtoft@c+1,f
   781  024F  0AA4               	incf	___awtoft@c,f
   782  0250  1903               	skipnz
   783  0251  0AA5               	incf	___awtoft@c+1,f
   784  0252  01A7               	clrf	___awtoft@sign
   785  0253  0AA7               	incf	___awtoft@sign,f
   786  0254                     l920:	
   787  0254  0824               	movf	___awtoft@c,w
   788  0255  00F2               	movwf	___ftpack@arg
   789  0256  0825               	movf	___awtoft@c+1,w
   790  0257  00F3               	movwf	___ftpack@arg+1
   791  0258  308E               	movlw	142
   792  0259  01F4               	clrf	___ftpack@arg+2
   793  025A  00F5               	movwf	___ftpack@exp
   794  025B  0827               	movf	___awtoft@sign,w
   795  025C  00F6               	movwf	___ftpack@sign
   796  025D  2194               	fcall	___ftpack
   797  025E  0872               	movf	?___ftpack,w
   798  025F  00A4               	movwf	?___awtoft
   799  0260  0873               	movf	?___ftpack+1,w
   800  0261  00A5               	movwf	?___awtoft+1
   801  0262  0874               	movf	?___ftpack+2,w
   802  0263  00A6               	movwf	?___awtoft+2
   803  0264  0008               	return
   804  0265                     __end_of___awtoft:	
   805                           
   806                           	psect	text5
   807  014F                     __ptext5:	
   808 ;; *************** function ___awdiv *****************
   809 ;; Defined at:
   810 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  divisor         2    8[COMMON] int 
   813 ;;  dividend        2   10[COMMON] int 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  quotient        2    2[BANK0 ] int 
   816 ;;  sign            1    1[BANK0 ] unsigned char 
   817 ;;  counter         1    0[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2    8[COMMON] int 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 100/0
   824 ;;		On exit  : 100/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1
   827 ;;      Params:         4       0       0
   828 ;;      Locals:         0       4       0
   829 ;;      Temps:          0       0       0
   830 ;;      Totals:         4       4       0
   831 ;;Total ram usage:        8 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_getSensorMeasurement
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function ___awdiv
   843  014F                     ___awdiv:	
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   847  014F  01A1               	clrf	___awdiv@sign
   848  0150  1FF9               	btfss	___awdiv@divisor+1,7
   849  0151  2959               	goto	l876
   850  0152  09F8               	comf	___awdiv@divisor,f
   851  0153  09F9               	comf	___awdiv@divisor+1,f
   852  0154  0AF8               	incf	___awdiv@divisor,f
   853  0155  1903               	skipnz
   854  0156  0AF9               	incf	___awdiv@divisor+1,f
   855  0157  01A1               	clrf	___awdiv@sign
   856  0158  0AA1               	incf	___awdiv@sign,f
   857  0159                     l876:	
   858  0159  1FFB               	btfss	___awdiv@dividend+1,7
   859  015A  2962               	goto	l882
   860  015B  09FA               	comf	___awdiv@dividend,f
   861  015C  09FB               	comf	___awdiv@dividend+1,f
   862  015D  0AFA               	incf	___awdiv@dividend,f
   863  015E  1903               	skipnz
   864  015F  0AFB               	incf	___awdiv@dividend+1,f
   865  0160  3001               	movlw	1
   866  0161  06A1               	xorwf	___awdiv@sign,f
   867  0162                     l882:	
   868  0162  01A2               	clrf	___awdiv@quotient
   869  0163  01A3               	clrf	___awdiv@quotient+1
   870  0164  0878               	movf	___awdiv@divisor,w
   871  0165  0479               	iorwf	___awdiv@divisor+1,w
   872  0166  1903               	btfsc	3,2
   873  0167  2987               	goto	l904
   874  0168  01A0               	clrf	___awdiv@counter
   875  0169                     L1:	
   876  0169  0AA0               	incf	___awdiv@counter,f
   877  016A  1BF9               	btfsc	___awdiv@divisor+1,7
   878  016B  2970               	goto	l892
   879  016C  1003               	clrc
   880  016D  0DF8               	rlf	___awdiv@divisor,f
   881  016E  0DF9               	rlf	___awdiv@divisor+1,f
   882  016F  2969               	goto	L1
   883  0170                     l892:	
   884  0170  1003               	clrc
   885  0171  0DA2               	rlf	___awdiv@quotient,f
   886  0172  0DA3               	rlf	___awdiv@quotient+1,f
   887  0173  0879               	movf	___awdiv@divisor+1,w
   888  0174  027B               	subwf	___awdiv@dividend+1,w
   889  0175  1D03               	skipz
   890  0176  2979               	goto	u525
   891  0177  0878               	movf	___awdiv@divisor,w
   892  0178  027A               	subwf	___awdiv@dividend,w
   893  0179                     u525:	
   894  0179  1C03               	skipc
   895  017A  2983               	goto	L2
   896  017B  0878               	movf	___awdiv@divisor,w
   897  017C  02FA               	subwf	___awdiv@dividend,f
   898  017D  0879               	movf	___awdiv@divisor+1,w
   899  017E  1C03               	skipc
   900  017F  03FB               	decf	___awdiv@dividend+1,f
   901  0180  02FB               	subwf	___awdiv@dividend+1,f
   902  0181  1422               	bsf	___awdiv@quotient,0
   903  0182  1003               	clrc
   904  0183                     L2:	
   905  0183  0CF9               	rrf	___awdiv@divisor+1,f
   906  0184  0CF8               	rrf	___awdiv@divisor,f
   907  0185  0BA0               	decfsz	___awdiv@counter,f
   908  0186  2970               	goto	l892
   909  0187                     l904:	
   910  0187  0821               	movf	___awdiv@sign,w
   911  0188  1903               	btfsc	3,2
   912  0189  298F               	goto	l908
   913  018A  09A2               	comf	___awdiv@quotient,f
   914  018B  09A3               	comf	___awdiv@quotient+1,f
   915  018C  0AA2               	incf	___awdiv@quotient,f
   916  018D  1903               	skipnz
   917  018E  0AA3               	incf	___awdiv@quotient+1,f
   918  018F                     l908:	
   919  018F  0823               	movf	___awdiv@quotient+1,w
   920  0190  00F9               	movwf	?___awdiv+1
   921  0191  0822               	movf	___awdiv@quotient,w
   922  0192  00F8               	movwf	?___awdiv
   923  0193  0008               	return
   924  0194                     __end_of___awdiv:	
   925                           
   926                           	psect	text6
   927  000D                     __ptext6:	
   928 ;; *************** function _getResultLed *****************
   929 ;; Defined at:
   930 ;;		line 77 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  voltage         3   21[BANK0 ] int 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  2   21[BANK0 ] unsigned int 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 100/0
   941 ;;		On exit  : 100/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1
   944 ;;      Params:         0       3       0
   945 ;;      Locals:         0       0       0
   946 ;;      Temps:          0       0       0
   947 ;;      Totals:         0       3       0
   948 ;;Total ram usage:        3 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    3
   951 ;; This function calls:
   952 ;;		___ftdiv
   953 ;;		___ftge
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _getResultLed
   961  000D                     _getResultLed:	
   962                           
   963                           ;main.c: 78: if ((voltage / 8.5) >= 0.32)
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _getResultLed: [wreg+status,2+status,0+pclath+cstack]
   967  000D  3008               	movlw	8
   968  000E  01A0               	clrf	___ftdiv@f2
   969  000F  00A1               	movwf	___ftdiv@f2+1
   970  0010  3041               	movlw	65
   971  0011  00A2               	movwf	___ftdiv@f2+2
   972  0012  0835               	movf	getResultLed@voltage,w
   973  0013  00A3               	movwf	___ftdiv@f1
   974  0014  0836               	movf	getResultLed@voltage+1,w
   975  0015  00A4               	movwf	___ftdiv@f1+1
   976  0016  0837               	movf	getResultLed@voltage+2,w
   977  0017  00A5               	movwf	___ftdiv@f1+2
   978  0018  20E7               	fcall	___ftdiv
   979  0019  0820               	movf	?___ftdiv,w
   980  001A  00AF               	movwf	___ftge@ff1
   981  001B  0821               	movf	?___ftdiv+1,w
   982  001C  00B0               	movwf	___ftge@ff1+1
   983  001D  0822               	movf	?___ftdiv+2,w
   984  001E  00B1               	movwf	___ftge@ff1+2
   985  001F  30D7               	movlw	215
   986  0020  00B2               	movwf	___ftge@ff2
   987  0021  30A3               	movlw	163
   988  0022  00B3               	movwf	___ftge@ff2+1
   989  0023  303E               	movlw	62
   990  0024  00B4               	movwf	___ftge@ff2+2
   991  0025  21D6               	fcall	___ftge
   992  0026  1C03               	btfss	3,0
   993  0027  282B               	goto	l1012
   994  0028                     l1006:	
   995                           
   996                           ;main.c: 79: {
   997                           ;main.c: 80: return 0;
   998  0028  01B5               	clrf	?_getResultLed
   999  0029  01B6               	clrf	?_getResultLed+1
  1000  002A  0008               	return
  1001  002B                     l1012:	
  1002                           
  1003                           ;main.c: 82: else
  1004                           ;main.c: 83: {
  1005                           ;main.c: 84: if (voltage > 3.3) {
  1006  002B  3033               	movlw	51
  1007  002C  00AF               	movwf	___ftge@ff1
  1008  002D  3053               	movlw	83
  1009  002E  00B0               	movwf	___ftge@ff1+1
  1010  002F  3040               	movlw	64
  1011  0030  00B1               	movwf	___ftge@ff1+2
  1012  0031  0835               	movf	getResultLed@voltage,w
  1013  0032  00B2               	movwf	___ftge@ff2
  1014  0033  0836               	movf	getResultLed@voltage+1,w
  1015  0034  00B3               	movwf	___ftge@ff2+1
  1016  0035  0837               	movf	getResultLed@voltage+2,w
  1017  0036  00B4               	movwf	___ftge@ff2+2
  1018  0037  21D6               	fcall	___ftge
  1019  0038  1C03               	btfss	3,0
  1020  0039  2828               	goto	l1006
  1021  003A  3066               	movlw	102
  1022  003B  00AF               	movwf	___ftge@ff1
  1023  003C  3046               	movlw	70
  1024  003D  00B0               	movwf	___ftge@ff1+1
  1025  003E  3040               	movlw	64
  1026  003F  00B1               	movwf	___ftge@ff1+2
  1027  0040  0835               	movf	getResultLed@voltage,w
  1028  0041  00B2               	movwf	___ftge@ff2
  1029  0042  0836               	movf	getResultLed@voltage+1,w
  1030  0043  00B3               	movwf	___ftge@ff2+1
  1031  0044  0837               	movf	getResultLed@voltage+2,w
  1032  0045  00B4               	movwf	___ftge@ff2+2
  1033  0046  21D6               	fcall	___ftge
  1034  0047  1803               	btfsc	3,0
  1035  0048  284D               	goto	l1028
  1036                           
  1037                           ;main.c: 87: return 0b1000000000000000;
  1038  0049  3080               	movlw	128
  1039  004A  01B5               	clrf	?_getResultLed
  1040  004B  00B6               	movwf	?_getResultLed+1
  1041  004C  0008               	return
  1042  004D                     l1028:	
  1043  004D  309A               	movlw	154
  1044  004E  00AF               	movwf	___ftge@ff1
  1045  004F  3039               	movlw	57
  1046  0050  00B0               	movwf	___ftge@ff1+1
  1047  0051  3040               	movlw	64
  1048  0052  00B1               	movwf	___ftge@ff1+2
  1049  0053  0835               	movf	getResultLed@voltage,w
  1050  0054  00B2               	movwf	___ftge@ff2
  1051  0055  0836               	movf	getResultLed@voltage+1,w
  1052  0056  00B3               	movwf	___ftge@ff2+1
  1053  0057  0837               	movf	getResultLed@voltage+2,w
  1054  0058  00B4               	movwf	___ftge@ff2+2
  1055  0059  21D6               	fcall	___ftge
  1056  005A  1803               	btfsc	3,0
  1057  005B  2860               	goto	l1036
  1058                           
  1059                           ;main.c: 89: return 0b1100000000000000;
  1060  005C  30C0               	movlw	192
  1061  005D  01B5               	clrf	?_getResultLed
  1062  005E  00B6               	movwf	?_getResultLed+1
  1063  005F  0008               	return
  1064  0060                     l1036:	
  1065  0060  3033               	movlw	51
  1066  0061  00AF               	movwf	___ftge@ff1
  1067  0062  00B0               	movwf	___ftge@ff1+1
  1068  0063  3040               	movlw	64
  1069  0064  00B1               	movwf	___ftge@ff1+2
  1070  0065  0835               	movf	getResultLed@voltage,w
  1071  0066  00B2               	movwf	___ftge@ff2
  1072  0067  0836               	movf	getResultLed@voltage+1,w
  1073  0068  00B3               	movwf	___ftge@ff2+1
  1074  0069  0837               	movf	getResultLed@voltage+2,w
  1075  006A  00B4               	movwf	___ftge@ff2+2
  1076  006B  21D6               	fcall	___ftge
  1077  006C  1803               	btfsc	3,0
  1078  006D  2872               	goto	l1044
  1079                           
  1080                           ;main.c: 91: return 0b1110000000000000;
  1081  006E  30E0               	movlw	224
  1082  006F  01B5               	clrf	?_getResultLed
  1083  0070  00B6               	movwf	?_getResultLed+1
  1084  0071  0008               	return
  1085  0072                     l1044:	
  1086  0072  30CD               	movlw	205
  1087  0073  00AF               	movwf	___ftge@ff1
  1088  0074  302C               	movlw	44
  1089  0075  00B0               	movwf	___ftge@ff1+1
  1090  0076  3040               	movlw	64
  1091  0077  00B1               	movwf	___ftge@ff1+2
  1092  0078  0835               	movf	getResultLed@voltage,w
  1093  0079  00B2               	movwf	___ftge@ff2
  1094  007A  0836               	movf	getResultLed@voltage+1,w
  1095  007B  00B3               	movwf	___ftge@ff2+1
  1096  007C  0837               	movf	getResultLed@voltage+2,w
  1097  007D  00B4               	movwf	___ftge@ff2+2
  1098  007E  21D6               	fcall	___ftge
  1099  007F  1803               	btfsc	3,0
  1100  0080  2885               	goto	l1052
  1101                           
  1102                           ;main.c: 93: return 0b1111000000000000;
  1103  0081  30F0               	movlw	240
  1104  0082  01B5               	clrf	?_getResultLed
  1105  0083  00B6               	movwf	?_getResultLed+1
  1106  0084  0008               	return
  1107  0085                     l1052:	
  1108  0085  3066               	movlw	102
  1109  0086  00AF               	movwf	___ftge@ff1
  1110  0087  3026               	movlw	38
  1111  0088  00B0               	movwf	___ftge@ff1+1
  1112  0089  3040               	movlw	64
  1113  008A  00B1               	movwf	___ftge@ff1+2
  1114  008B  0835               	movf	getResultLed@voltage,w
  1115  008C  00B2               	movwf	___ftge@ff2
  1116  008D  0836               	movf	getResultLed@voltage+1,w
  1117  008E  00B3               	movwf	___ftge@ff2+1
  1118  008F  0837               	movf	getResultLed@voltage+2,w
  1119  0090  00B4               	movwf	___ftge@ff2+2
  1120  0091  21D6               	fcall	___ftge
  1121  0092  1803               	btfsc	3,0
  1122  0093  2898               	goto	l1060
  1123                           
  1124                           ;main.c: 95: return 0b1111100000000000;
  1125  0094  30F8               	movlw	248
  1126  0095  01B5               	clrf	?_getResultLed
  1127  0096  00B6               	movwf	?_getResultLed+1
  1128  0097  0008               	return
  1129  0098                     l1060:	
  1130  0098  3020               	movlw	32
  1131  0099  01AF               	clrf	___ftge@ff1
  1132  009A  00B0               	movwf	___ftge@ff1+1
  1133  009B  3040               	movlw	64
  1134  009C  00B1               	movwf	___ftge@ff1+2
  1135  009D  0835               	movf	getResultLed@voltage,w
  1136  009E  00B2               	movwf	___ftge@ff2
  1137  009F  0836               	movf	getResultLed@voltage+1,w
  1138  00A0  00B3               	movwf	___ftge@ff2+1
  1139  00A1  0837               	movf	getResultLed@voltage+2,w
  1140  00A2  00B4               	movwf	___ftge@ff2+2
  1141  00A3  21D6               	fcall	___ftge
  1142  00A4  1803               	btfsc	3,0
  1143  00A5  28AA               	goto	l1068
  1144                           
  1145                           ;main.c: 97: return 0b1111110000000000;
  1146  00A6  30FC               	movlw	252
  1147  00A7  01B5               	clrf	?_getResultLed
  1148  00A8  00B6               	movwf	?_getResultLed+1
  1149  00A9  0008               	return
  1150  00AA                     l1068:	
  1151  00AA  309A               	movlw	154
  1152  00AB  00AF               	movwf	___ftge@ff1
  1153  00AC  3019               	movlw	25
  1154  00AD  00B0               	movwf	___ftge@ff1+1
  1155  00AE  3040               	movlw	64
  1156  00AF  00B1               	movwf	___ftge@ff1+2
  1157  00B0  0835               	movf	getResultLed@voltage,w
  1158  00B1  00B2               	movwf	___ftge@ff2
  1159  00B2  0836               	movf	getResultLed@voltage+1,w
  1160  00B3  00B3               	movwf	___ftge@ff2+1
  1161  00B4  0837               	movf	getResultLed@voltage+2,w
  1162  00B5  00B4               	movwf	___ftge@ff2+2
  1163  00B6  21D6               	fcall	___ftge
  1164  00B7  1803               	btfsc	3,0
  1165  00B8  28BD               	goto	l1076
  1166                           
  1167                           ;main.c: 99: return 0b1111111000000000;
  1168  00B9  30FE               	movlw	254
  1169  00BA  01B5               	clrf	?_getResultLed
  1170  00BB  00B6               	movwf	?_getResultLed+1
  1171  00BC  0008               	return
  1172  00BD                     l1076:	
  1173  00BD  30CD               	movlw	205
  1174  00BE  00AF               	movwf	___ftge@ff1
  1175  00BF  300C               	movlw	12
  1176  00C0  00B0               	movwf	___ftge@ff1+1
  1177  00C1  3040               	movlw	64
  1178  00C2  00B1               	movwf	___ftge@ff1+2
  1179  00C3  0835               	movf	getResultLed@voltage,w
  1180  00C4  00B2               	movwf	___ftge@ff2
  1181  00C5  0836               	movf	getResultLed@voltage+1,w
  1182  00C6  00B3               	movwf	___ftge@ff2+1
  1183  00C7  0837               	movf	getResultLed@voltage+2,w
  1184  00C8  00B4               	movwf	___ftge@ff2+2
  1185  00C9  21D6               	fcall	___ftge
  1186  00CA  1803               	btfsc	3,0
  1187  00CB  28D0               	goto	l1084
  1188                           
  1189                           ;main.c: 101: return 0b1111111100000000;
  1190  00CC  30FF               	movlw	255
  1191  00CD  01B5               	clrf	?_getResultLed
  1192  00CE  00B6               	movwf	?_getResultLed+1
  1193  00CF  0008               	return
  1194  00D0                     l1084:	
  1195  00D0  3040               	movlw	64
  1196  00D1  01AF               	clrf	___ftge@ff1
  1197  00D2  01B0               	clrf	___ftge@ff1+1
  1198  00D3  00B1               	movwf	___ftge@ff1+2
  1199  00D4  0835               	movf	getResultLed@voltage,w
  1200  00D5  00B2               	movwf	___ftge@ff2
  1201  00D6  0836               	movf	getResultLed@voltage+1,w
  1202  00D7  00B3               	movwf	___ftge@ff2+1
  1203  00D8  0837               	movf	getResultLed@voltage+2,w
  1204  00D9  00B4               	movwf	___ftge@ff2+2
  1205  00DA  21D6               	fcall	___ftge
  1206  00DB  1803               	btfsc	3,0
  1207  00DC  28E2               	goto	l1092
  1208                           
  1209                           ;main.c: 103: return 0b1111111110000000;
  1210  00DD  3080               	movlw	128
  1211  00DE  00B5               	movwf	?_getResultLed
  1212  00DF  30FF               	movlw	255
  1213  00E0  00B6               	movwf	?_getResultLed+1
  1214  00E1  0008               	return
  1215  00E2                     l1092:	
  1216                           
  1217                           ;main.c: 105: return 0b1111111111000000;
  1218  00E2  30C0               	movlw	192
  1219  00E3  00B5               	movwf	?_getResultLed
  1220  00E4  30FF               	movlw	255
  1221  00E5  00B6               	movwf	?_getResultLed+1
  1222  00E6  0008               	return
  1223  00E7                     __end_of_getResultLed:	
  1224                           
  1225                           	psect	text7
  1226  01D6                     __ptext7:	
  1227 ;; *************** function ___ftge *****************
  1228 ;; Defined at:
  1229 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  ff1             3   15[BANK0 ] float 
  1232 ;;  ff2             3   18[BANK0 ] float 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;		None               void
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 100/0
  1241 ;;		On exit  : 100/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1
  1244 ;;      Params:         0       6       0
  1245 ;;      Locals:         0       0       0
  1246 ;;      Temps:          0       0       0
  1247 ;;      Totals:         0       6       0
  1248 ;;Total ram usage:        6 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_getResultLed
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function ___ftge
  1260  01D6                     ___ftge:	
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1264  01D6  1FB1               	btfss	___ftge@ff1+2,7
  1265  01D7  29E5               	goto	l968
  1266  01D8  082F               	movf	___ftge@ff1,w
  1267  01D9  3C00               	sublw	0
  1268  01DA  00AF               	movwf	___ftge@ff1
  1269  01DB  0830               	movf	___ftge@ff1+1,w
  1270  01DC  1C03               	skipc
  1271  01DD  0F30               	incfsz	___ftge@ff1+1,w
  1272  01DE  3C00               	sublw	0
  1273  01DF  00B0               	movwf	___ftge@ff1+1
  1274  01E0  0831               	movf	___ftge@ff1+2,w
  1275  01E1  1C03               	skipc
  1276  01E2  0F31               	incfsz	___ftge@ff1+2,w
  1277  01E3  3C80               	sublw	128
  1278  01E4  00B1               	movwf	___ftge@ff1+2
  1279  01E5                     l968:	
  1280  01E5  1FB4               	btfss	___ftge@ff2+2,7
  1281  01E6  29F4               	goto	l972
  1282  01E7  0832               	movf	___ftge@ff2,w
  1283  01E8  3C00               	sublw	0
  1284  01E9  00B2               	movwf	___ftge@ff2
  1285  01EA  0833               	movf	___ftge@ff2+1,w
  1286  01EB  1C03               	skipc
  1287  01EC  0F33               	incfsz	___ftge@ff2+1,w
  1288  01ED  3C00               	sublw	0
  1289  01EE  00B3               	movwf	___ftge@ff2+1
  1290  01EF  0834               	movf	___ftge@ff2+2,w
  1291  01F0  1C03               	skipc
  1292  01F1  0F34               	incfsz	___ftge@ff2+2,w
  1293  01F2  3C80               	sublw	128
  1294  01F3  00B4               	movwf	___ftge@ff2+2
  1295  01F4                     l972:	
  1296  01F4  3080               	movlw	128
  1297  01F5  06B1               	xorwf	___ftge@ff1+2,f
  1298  01F6  06B4               	xorwf	___ftge@ff2+2,f
  1299  01F7  0834               	movf	___ftge@ff2+2,w
  1300  01F8  0231               	subwf	___ftge@ff1+2,w
  1301  01F9  1D03               	skipz
  1302  01FA  0008               	return
  1303  01FB  0833               	movf	___ftge@ff2+1,w
  1304  01FC  0230               	subwf	___ftge@ff1+1,w
  1305  01FD  1D03               	skipz
  1306  01FE  0008               	return
  1307  01FF  0832               	movf	___ftge@ff2,w
  1308  0200  022F               	subwf	___ftge@ff1,w
  1309  0201  0008               	return
  1310  0202                     __end_of___ftge:	
  1311                           
  1312                           	psect	text8
  1313  00E7                     __ptext8:	
  1314 ;; *************** function ___ftdiv *****************
  1315 ;; Defined at:
  1316 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  f2              3    0[BANK0 ] float 
  1319 ;;  f1              3    3[BANK0 ] float 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  f3              3   10[BANK0 ] float 
  1322 ;;  sign            1   14[BANK0 ] unsigned char 
  1323 ;;  exp             1   13[BANK0 ] unsigned char 
  1324 ;;  cntr            1    9[BANK0 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  3    0[BANK0 ] float 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 100/0
  1331 ;;		On exit  : 100/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1
  1334 ;;      Params:         0       6       0
  1335 ;;      Locals:         0       6       0
  1336 ;;      Temps:          0       3       0
  1337 ;;      Totals:         0      15       0
  1338 ;;Total ram usage:       15 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    2
  1341 ;; This function calls:
  1342 ;;		___ftpack
  1343 ;; This function is called by:
  1344 ;;		_getResultLed
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function ___ftdiv
  1350  00E7                     ___ftdiv:	
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1354  00E7  0823               	movf	___ftdiv@f1,w
  1355  00E8  00A6               	movwf	??___ftdiv
  1356  00E9  0824               	movf	___ftdiv@f1+1,w
  1357  00EA  00A7               	movwf	??___ftdiv+1
  1358  00EB  0825               	movf	___ftdiv@f1+2,w
  1359  00EC  00A8               	movwf	??___ftdiv+2
  1360  00ED  1003               	clrc
  1361  00EE  0D27               	rlf	??___ftdiv+1,w
  1362  00EF  0D28               	rlf	??___ftdiv+2,w
  1363  00F0  00AD               	movwf	___ftdiv@exp
  1364  00F1  082D               	movf	___ftdiv@exp,w
  1365  00F2  1D03               	btfss	3,2
  1366  00F3  28F8               	goto	l928
  1367  00F4  01A0               	clrf	?___ftdiv
  1368  00F5  01A1               	clrf	?___ftdiv+1
  1369  00F6  01A2               	clrf	?___ftdiv+2
  1370  00F7  0008               	return
  1371  00F8                     l928:	
  1372  00F8  0820               	movf	___ftdiv@f2,w
  1373  00F9  00A6               	movwf	??___ftdiv
  1374  00FA  0821               	movf	___ftdiv@f2+1,w
  1375  00FB  00A7               	movwf	??___ftdiv+1
  1376  00FC  0822               	movf	___ftdiv@f2+2,w
  1377  00FD  00A8               	movwf	??___ftdiv+2
  1378  00FE  1003               	clrc
  1379  00FF  0D27               	rlf	??___ftdiv+1,w
  1380  0100  0D28               	rlf	??___ftdiv+2,w
  1381  0101  00AE               	movwf	___ftdiv@sign
  1382  0102  082E               	movf	___ftdiv@sign,w
  1383  0103  1D03               	btfss	3,2
  1384  0104  2909               	goto	l368
  1385  0105  01A0               	clrf	?___ftdiv
  1386  0106  01A1               	clrf	?___ftdiv+1
  1387  0107  01A2               	clrf	?___ftdiv+2
  1388  0108  0008               	return
  1389  0109                     l368:	
  1390  0109  3089               	movlw	137
  1391  010A  01AA               	clrf	___ftdiv@f3
  1392  010B  01AB               	clrf	___ftdiv@f3+1
  1393  010C  01AC               	clrf	___ftdiv@f3+2
  1394  010D  072E               	addwf	___ftdiv@sign,w
  1395  010E  00A6               	movwf	??___ftdiv
  1396  010F  02AD               	subwf	___ftdiv@exp,f
  1397  0110  0825               	movf	___ftdiv@f1+2,w
  1398  0111  00AE               	movwf	___ftdiv@sign
  1399  0112  0822               	movf	___ftdiv@f2+2,w
  1400  0113  06AE               	xorwf	___ftdiv@sign,f
  1401  0114  3080               	movlw	128
  1402  0115  05AE               	andwf	___ftdiv@sign,f
  1403  0116  3018               	movlw	24
  1404  0117  17A4               	bsf	___ftdiv@f1+1,7
  1405  0118  01A5               	clrf	___ftdiv@f1+2
  1406  0119  17A1               	bsf	___ftdiv@f2+1,7
  1407  011A  01A2               	clrf	___ftdiv@f2+2
  1408  011B  00A9               	movwf	___ftdiv@cntr
  1409  011C                     l950:	
  1410  011C  1003               	clrc
  1411  011D  0DAA               	rlf	___ftdiv@f3,f
  1412  011E  0DAB               	rlf	___ftdiv@f3+1,f
  1413  011F  0DAC               	rlf	___ftdiv@f3+2,f
  1414  0120  0822               	movf	___ftdiv@f2+2,w
  1415  0121  0225               	subwf	___ftdiv@f1+2,w
  1416  0122  1D03               	skipz
  1417  0123  292A               	goto	u585
  1418  0124  0821               	movf	___ftdiv@f2+1,w
  1419  0125  0224               	subwf	___ftdiv@f1+1,w
  1420  0126  1D03               	skipz
  1421  0127  292A               	goto	u585
  1422  0128  0820               	movf	___ftdiv@f2,w
  1423  0129  0223               	subwf	___ftdiv@f1,w
  1424  012A                     u585:	
  1425  012A  1C03               	skipc
  1426  012B  2938               	goto	L4
  1427  012C  0820               	movf	___ftdiv@f2,w
  1428  012D  02A3               	subwf	___ftdiv@f1,f
  1429  012E  0821               	movf	___ftdiv@f2+1,w
  1430  012F  1C03               	skipc
  1431  0130  0F21               	incfsz	___ftdiv@f2+1,w
  1432  0131  02A4               	subwf	___ftdiv@f1+1,f
  1433  0132  0822               	movf	___ftdiv@f2+2,w
  1434  0133  1C03               	skipc
  1435  0134  0A22               	incf	___ftdiv@f2+2,w
  1436  0135  02A5               	subwf	___ftdiv@f1+2,f
  1437  0136  142A               	bsf	___ftdiv@f3,0
  1438  0137  1003               	clrc
  1439  0138                     L4:	
  1440  0138  0DA3               	rlf	___ftdiv@f1,f
  1441  0139  0DA4               	rlf	___ftdiv@f1+1,f
  1442  013A  0DA5               	rlf	___ftdiv@f1+2,f
  1443  013B  0BA9               	decfsz	___ftdiv@cntr,f
  1444  013C  291C               	goto	l950
  1445  013D  082A               	movf	___ftdiv@f3,w
  1446  013E  00F2               	movwf	___ftpack@arg
  1447  013F  082B               	movf	___ftdiv@f3+1,w
  1448  0140  00F3               	movwf	___ftpack@arg+1
  1449  0141  082C               	movf	___ftdiv@f3+2,w
  1450  0142  00F4               	movwf	___ftpack@arg+2
  1451  0143  082D               	movf	___ftdiv@exp,w
  1452  0144  00F5               	movwf	___ftpack@exp
  1453  0145  082E               	movf	___ftdiv@sign,w
  1454  0146  00F6               	movwf	___ftpack@sign
  1455  0147  2194               	fcall	___ftpack
  1456  0148  0872               	movf	?___ftpack,w
  1457  0149  00A0               	movwf	?___ftdiv
  1458  014A  0873               	movf	?___ftpack+1,w
  1459  014B  00A1               	movwf	?___ftdiv+1
  1460  014C  0874               	movf	?___ftpack+2,w
  1461  014D  00A2               	movwf	?___ftdiv+2
  1462  014E  0008               	return
  1463  014F                     __end_of___ftdiv:	
  1464                           
  1465                           	psect	text9
  1466  0194                     __ptext9:	
  1467 ;; *************** function ___ftpack *****************
  1468 ;; Defined at:
  1469 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  arg             3    2[COMMON] unsigned um
  1472 ;;  exp             1    5[COMMON] unsigned char 
  1473 ;;  sign            1    6[COMMON] unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  3    2[COMMON] float 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 100/0
  1482 ;;		On exit  : 100/0
  1483 ;;		Unchanged: 100/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1
  1485 ;;      Params:         5       0       0
  1486 ;;      Locals:         0       0       0
  1487 ;;      Temps:          3       0       0
  1488 ;;      Totals:         8       0       0
  1489 ;;Total ram usage:        8 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		___awtoft
  1496 ;;		___ftdiv
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function ___ftpack
  1502  0194                     ___ftpack:	
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1506  0194  0875               	movf	___ftpack@exp,w
  1507  0195  1903               	btfsc	3,2
  1508  0196  299C               	goto	l314
  1509  0197  0874               	movf	___ftpack@arg+2,w
  1510  0198  0473               	iorwf	___ftpack@arg+1,w
  1511  0199  0472               	iorwf	___ftpack@arg,w
  1512  019A  1D03               	skipz
  1513  019B  29A5               	goto	l834
  1514  019C                     l314:	
  1515  019C  01F2               	clrf	?___ftpack
  1516  019D  01F3               	clrf	?___ftpack+1
  1517  019E  01F4               	clrf	?___ftpack+2
  1518  019F  0008               	return
  1519  01A0                     l832:	
  1520  01A0  0AF5               	incf	___ftpack@exp,f
  1521  01A1  1003               	clrc
  1522  01A2  0CF4               	rrf	___ftpack@arg+2,f
  1523  01A3  0CF3               	rrf	___ftpack@arg+1,f
  1524  01A4  0CF2               	rrf	___ftpack@arg,f
  1525  01A5                     l834:	
  1526  01A5  30FE               	movlw	254
  1527  01A6  0574               	andwf	___ftpack@arg+2,w
  1528  01A7  1903               	btfsc	3,2
  1529  01A8  29B4               	goto	l838
  1530  01A9  29A0               	goto	l832
  1531  01AA                     l836:	
  1532  01AA  0AF5               	incf	___ftpack@exp,f
  1533  01AB  0AF2               	incf	___ftpack@arg,f
  1534  01AC  1903               	skipnz
  1535  01AD  0AF3               	incf	___ftpack@arg+1,f
  1536  01AE  1903               	skipnz
  1537  01AF  0AF4               	incf	___ftpack@arg+2,f
  1538  01B0  1003               	clrc
  1539  01B1  0CF4               	rrf	___ftpack@arg+2,f
  1540  01B2  0CF3               	rrf	___ftpack@arg+1,f
  1541  01B3  0CF2               	rrf	___ftpack@arg,f
  1542  01B4                     l838:	
  1543  01B4  30FF               	movlw	255
  1544  01B5  0574               	andwf	___ftpack@arg+2,w
  1545  01B6  1903               	btfsc	3,2
  1546  01B7  29C2               	goto	l842
  1547  01B8  29AA               	goto	l836
  1548  01B9                     l844:	
  1549  01B9  3002               	movlw	2
  1550  01BA  0275               	subwf	___ftpack@exp,w
  1551  01BB  1C03               	btfss	3,0
  1552  01BC  29C4               	goto	l326
  1553  01BD  03F5               	decf	___ftpack@exp,f
  1554  01BE  1003               	clrc
  1555  01BF  0DF2               	rlf	___ftpack@arg,f
  1556  01C0  0DF3               	rlf	___ftpack@arg+1,f
  1557  01C1  0DF4               	rlf	___ftpack@arg+2,f
  1558  01C2                     l842:	
  1559  01C2  1FF3               	btfss	___ftpack@arg+1,7
  1560  01C3  29B9               	goto	l844
  1561  01C4                     l326:	
  1562  01C4  1C75               	btfss	___ftpack@exp,0
  1563  01C5  13F3               	bcf	___ftpack@arg+1,7
  1564  01C6  1003               	clrc
  1565  01C7  0CF5               	rrf	___ftpack@exp,f
  1566  01C8  0875               	movf	___ftpack@exp,w
  1567  01C9  00F9               	movwf	??___ftpack+2
  1568  01CA  01F8               	clrf	??___ftpack+1
  1569  01CB  01F7               	clrf	??___ftpack
  1570  01CC  0877               	movf	??___ftpack,w
  1571  01CD  04F2               	iorwf	___ftpack@arg,f
  1572  01CE  0878               	movf	??___ftpack+1,w
  1573  01CF  04F3               	iorwf	___ftpack@arg+1,f
  1574  01D0  0879               	movf	??___ftpack+2,w
  1575  01D1  04F4               	iorwf	___ftpack@arg+2,f
  1576  01D2  0876               	movf	___ftpack@sign,w
  1577  01D3  1D03               	btfss	3,2
  1578  01D4  17F4               	bsf	___ftpack@arg+2,7
  1579  01D5  0008               	return
  1580  01D6                     __end_of___ftpack:	
  1581                           
  1582                           	psect	text10
  1583  027E                     __ptext10:	
  1584 ;; *************** function _InitApp *****************
  1585 ;; Defined at:
  1586 ;;		line 14 in file "user.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : B00/0
  1597 ;;		On exit  : B00/100
  1598 ;;		Unchanged: A00/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1
  1600 ;;      Params:         0       0       0
  1601 ;;      Locals:         0       0       0
  1602 ;;      Temps:          0       0       0
  1603 ;;      Totals:         0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _InitApp
  1616  027E                     _InitApp:	
  1617                           
  1618                           ;user.c: 19: TRISIObits.TRISIO4 = 1;
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  1622  027E  1683               	bsf	3,5	;RP0=1, select bank1
  1623  027F  1605               	bsf	5,4	;volatile
  1624                           
  1625                           ;user.c: 23: ADCON0bits.CHS = 0b11;
  1626  0280  300C               	movlw	12
  1627  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0282  049F               	iorwf	31,f	;volatile
  1629                           
  1630                           ;user.c: 27: ADCON0bits.ADON = 1;
  1631  0283  141F               	bsf	31,0	;volatile
  1632                           
  1633                           ;user.c: 34: TRISIObits.TRISIO0 = 0;
  1634  0284  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0285  1005               	bcf	5,0	;volatile
  1636                           
  1637                           ;user.c: 35: TRISIObits.TRISIO1 = 0;
  1638  0286  1085               	bcf	5,1	;volatile
  1639                           
  1640                           ;user.c: 36: TRISIObits.TRISIO2 = 0;
  1641  0287  1105               	bcf	5,2	;volatile
  1642  0288  0008               	return
  1643  0289                     __end_of_InitApp:	
  1644                           
  1645                           	psect	text11
  1646  0291                     __ptext11:	
  1647 ;; *************** function _ConfigureOscillator *****************
  1648 ;; Defined at:
  1649 ;;		line 13 in file "system.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		None
  1658 ;; Tracked objects:
  1659 ;;		On entry : B00/0
  1660 ;;		On exit  : B00/0
  1661 ;;		Unchanged: B00/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1
  1663 ;;      Params:         0       0       0
  1664 ;;      Locals:         0       0       0
  1665 ;;      Temps:          0       0       0
  1666 ;;      Totals:         0       0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _ConfigureOscillator
  1679  0291                     _ConfigureOscillator:	
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _ConfigureOscillator: []
  1683  0291  0008               	return
  1684  0292                     __end_of_ConfigureOscillator:	
  1685                           
  1686                           	psect	text12
  1687  0289                     __ptext12:	
  1688 ;; *************** function _isr *****************
  1689 ;; Defined at:
  1690 ;;		line 13 in file "interrupts.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		None
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1
  1704 ;;      Params:         0       0       0
  1705 ;;      Locals:         0       0       0
  1706 ;;      Temps:          2       0       0
  1707 ;;      Totals:         2       0       0
  1708 ;;Total ram usage:        2 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		Interrupt level 1
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _isr
  1719  0289                     _isr:	
  1720  0289  0871               	movf	??_isr+1,w
  1721  028A  008A               	movwf	10
  1722  028B  0E70               	swapf	??_isr^(0+-128),w
  1723  028C  0083               	movwf	3
  1724  028D  0EFE               	swapf	126,f
  1725  028E  0E7E               	swapf	126,w
  1726  028F  0009               	retfie
  1727  0290                     __end_of_isr:	
  1728  007E                     btemp	set	126	;btemp
  1729  007E                     wtemp	set	126
  1730  007E                     wtemp0	set	126
  1731  0080                     wtemp1	set	128
  1732  0082                     wtemp2	set	130
  1733  0084                     wtemp3	set	132
  1734  0086                     wtemp4	set	134
  1735  0088                     wtemp5	set	136
  1736  007F                     wtemp6	set	127
  1737  007E                     ttemp	set	126
  1738  007E                     ttemp0	set	126
  1739  0081                     ttemp1	set	129
  1740  0084                     ttemp2	set	132
  1741  0087                     ttemp3	set	135
  1742  007F                     ttemp4	set	127
  1743  007E                     ltemp	set	126
  1744  007E                     ltemp0	set	126
  1745  0082                     ltemp1	set	130
  1746  0086                     ltemp2	set	134
  1747  0080                     ltemp3	set	128
  1748                           
  1749                           	psect	intentry
  1750  0004                     __pintentry:	
  1751                           ;incstack = 0
  1752                           ; Regs used in _isr: []
  1753                           
  1754  0004                     interrupt_function:	
  1755  007E                     saved_w	set	btemp
  1756  0004  00FE               	movwf	btemp
  1757  0005  0E03               	swapf	3,w
  1758  0006  00F0               	movwf	??_isr
  1759  0007  080A               	movf	10,w
  1760  0008  00F1               	movwf	??_isr+1
  1761  0009  2A89               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     32      32
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _getSensorMeasurement->___awdiv
    ___awtoft->___awdiv
    ___awdiv->___wmul
    ___ftdiv->___ftpack

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getResultLed
    _getSensorMeasurement->___awtoft
    ___awtoft->___awdiv
    _getResultLed->___ftge
    ___ftge->___ftdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    6113
                                             24 BANK0      8     8      0
                _ConfigureOscillator
                            _InitApp
                       _getResultLed
               _getSensorMeasurement
                      _setResultLeds
 ---------------------------------------------------------------------------------
 (1) _setResultLeds                                        2     0      2      53
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getSensorMeasurement                                 4     1      3    2400
                                              8 BANK0      4     1      3
                            ___awdiv
                           ___awtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    1773
                                              4 BANK0      4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     406
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _getResultLed                                         3     0      3    3614
                                             21 BANK0      3     0      3
                            ___ftdiv
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6    1302
                                             15 BANK0      6     0      6
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2017
                                              0 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _getResultLed
     ___ftdiv
       ___ftpack
     ___ftge
       ___ftdiv (ARG)
         ___ftpack
   _getSensorMeasurement
     ___awdiv
       ___wmul (ARG)
     ___awtoft
       ___awdiv (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___wmul
   _setResultLeds

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     20      20       4       40.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Oct 16 23:57:45 2016

               ??_getResultLed 007A                    __CFG_CP$OFF 0000                             l22 0204  
                           l28 022B                   ___awdiv@sign 0021            ___wmul@multiplicand 0074  
                          l314 019C                            l326 01C4                            l368 0109  
                          l832 01A0                            l904 0187                            l920 0254  
                          l842 01C2                            l834 01A5                            l844 01B9  
                          l836 01AA                            l908 018F                            l838 01B4  
                          l950 011C                            l854 0267                            l928 00F8  
                          l882 0162                            l858 026F                            l972 01F4  
                          l892 0170                            l876 0159                            l968 01E5  
                 __CFG_CPD$OFF 0000                            u525 0179                            u585 012A  
                          u757 020B                            _isr 0289                   __CFG_IESO$ON 0000  
                 ___ftdiv@cntr 0029         ??_getSensorMeasurement 007C                   ___ftdiv@sign 002E  
                         l1012 002B                           l1006 0028                           l1060 0098  
                         l1052 0085                           l1044 0072                           l1036 0060  
                         l1028 004D                           l1092 00E2                           l1084 00D0  
                         l1076 00BD                           l1068 00AA                           ?_isr 0070  
                __CFG_FCMEN$ON 0000                           _main 0202                   ___ftpack@arg 0072  
                 ___ftpack@exp 0075                           btemp 007E                  __CFG_BOREN$ON 0000  
                         ltemp 007E                           start 000A                           ttemp 007E  
                         wtemp 007E                  __CFG_MCLRE$ON 0000                __end_of_InitApp 0289  
                        ??_isr 0070                          ?_main 0070                __end_of___awdiv 0194  
                __CFG_WDTE$OFF 0000                __end_of___ftdiv 014F                ___awdiv@divisor 0078  
              ___awdiv@counter 0020            _ConfigureOscillator 0291                  ___awtoft@sign 0027  
                ___ftpack@sign 0076                          pclath 000A                          ltemp0 007E  
                        ltemp1 0082                          ltemp2 0086                          ltemp3 0080  
                        ttemp0 007E                          ttemp1 0081                          ttemp2 0084  
                        ttemp3 0087                          ttemp4 007F                          status 0003  
                        wtemp0 007E                          wtemp1 0080                          wtemp2 0082  
                        wtemp3 0084                          wtemp4 0086                          wtemp5 0088  
                        wtemp6 007F           ?_ConfigureOscillator 0070                __initialization 000B  
                 __end_of_main 0229        getSensorMeasurement@val 002B                         ??_main 0038  
        __end_of_setResultLeds 0291                         _ADRESH 001E               ___awdiv@dividend 007A  
         __end_of_getResultLed 00E7               __end_of___awtoft 0265               __end_of___ftpack 01D6  
                    ??_InitApp 0072          ??_ConfigureOscillator 0072                 __CFG_PWRTE$OFF 0000  
                       ___ftge 01D6                         ___wmul 0265                      ??___awdiv 007C  
                    ??___ftdiv 0026               ___awdiv@quotient 0022                         saved_w 007E  
      __end_of__initialization 000B                     ___ftge@ff1 002F                     ___ftge@ff2 0032  
                   ___ftdiv@f1 0023                     ___ftdiv@f2 0020                     ___ftdiv@f3 002A  
                   ___awtoft@c 0024                 __pcstackCOMMON 0070                     __pmaintext 0202  
                      ?___ftge 002F                        ?___wmul 0072                     __pintentry 0004  
                    ?___awtoft 0024                      ?___ftpack 0072          __size_of_getResultLed 00DA  
__size_of_getSensorMeasurement 0021                        _InitApp 027E                __size_of___ftge 002C  
                      ___awdiv 014F                        ___ftdiv 00E7                __size_of___wmul 0019  
                 _getResultLed 000D                     ??___awtoft 007C                     ??___ftpack 0077  
                      __ptext1 0290                        __ptext2 0229                        __ptext3 0265  
                      __ptext4 024A                        __ptext5 014F                        __ptext6 000D  
                      __ptext7 01D6                        __ptext8 00E7                        __ptext9 0194  
                 __size_of_isr 0007            getResultLed@voltage 0035           end_of_initialization 000B  
  __end_of_ConfigureOscillator 0292                    ___ftdiv@exp 002D         __size_of_setResultLeds 0001  
               __end_of___ftge 0202                 __end_of___wmul 027E            start_initialization 000B  
                  __end_of_isr 0290                       ??___ftge 007A                       ??___wmul 0076  
            setResultLeds@leds 0072              __size_of___awtoft 001B              __size_of___ftpack 0042  
        main@sensorMeasurement 003B                      ___latbits 0000                  __pcstackBANK0 0020  
                _setResultLeds 0290                       ?_InitApp 0070                       ?___awdiv 0078  
                     ?___ftdiv 0020   __end_of_getSensorMeasurement 024A                 ?_setResultLeds 0072  
            interrupt_function 0004                 ___wmul@product 0076                     _ADCON0bits 001F  
            ___wmul@multiplier 0072               __size_of_InitApp 000B               __size_of___awdiv 0045  
             __size_of___ftdiv 0068                       ___awtoft 024A                       ___ftpack 0194  
              ??_setResultLeds 0074                       __ptext10 027E                       __ptext11 0291  
                     __ptext12 0289           _getSensorMeasurement 0229                  __size_of_main 0027  
 __size_of_ConfigureOscillator 0001                       main@leds 003E                       intlevel1 0000  
        ?_getSensorMeasurement 0028                  ?_getResultLed 0035             __CFG_FOSC$INTOSCIO 0000  
                   _TRISIObits 0085  
